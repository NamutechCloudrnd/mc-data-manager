// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/backup": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllBackupHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/nrdbms": {
            "post": {
                "description": "Export data from a MySQL database to SQL files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from MySQL",
                "operationId": "BackupNRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/objectstorage": {
            "post": {
                "description": "Export data from a objectstorage  to files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from objectstorage",
                "operationId": "BackupOSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/rdbms": {
            "post": {
                "description": "Export data from a MySQL database to SQL files.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Export data from MySQL",
                "operationId": "BackupRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for backup",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BackupTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully backup data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/backup/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetBackupHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateBackupHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Backup]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteBackupkHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllGenerateHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/aws": {
            "post": {
                "description": "Generate test data on AWS S3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on AWS S3",
                "operationId": "GenerateS3PostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/dynamodb": {
            "post": {
                "description": "Generate test data on AWS DynamoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on AWS DynamoDB",
                "operationId": "GenerateDynamoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/firestore": {
            "post": {
                "description": "Generate test data on GCP Firestore.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on GCP Firestore",
                "operationId": "GenerateFirestorePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/gcp": {
            "post": {
                "description": "Generate test data on GCP Cloud Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on GCP Cloud Storage",
                "operationId": "GenerateGCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/linux": {
            "post": {
                "description": "Generate test data on on-premise Linux.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on on-premise Linux",
                "operationId": "GenerateLinuxPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/mongodb": {
            "post": {
                "description": "Generate test data on NCP MongoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on NCP MongoDB",
                "operationId": "GenerateMongoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/mysql": {
            "post": {
                "description": "Generate test data on MySQL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on MySQL",
                "operationId": "GenerateMySQLPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/ncp": {
            "post": {
                "description": "Generate test data on NCP Object Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on NCP Object Storage",
                "operationId": "GenerateNCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/nrdbms": {
            "post": {
                "description": "Generate test data on Object Storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on Object Storage",
                "operationId": "GenerateNRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/objectstorage": {
            "post": {
                "description": "Generate test data on Object Storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on Object Storage",
                "operationId": "GenerateObjectStoragePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/rdbms": {
            "post": {
                "description": "Generate test data on RDBMS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on RDBMS",
                "operationId": "GenerateRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/windows": {
            "post": {
                "description": "Generate test data on on-premise Windows.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Generate test data on on-premise Windows",
                "operationId": "GenerateWindowsPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required to generate test data",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenarateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated test data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/generate/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetGenerateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateGenerateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Generate]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteGeneratekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllMigrateHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migrate/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetMigrateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateMigrateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteMigratekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/aws/gcp": {
            "post": {
                "description": "Migrate data stored in AWS S3 to Google Cloud Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from AWS S3 to GCP",
                "operationId": "MigrationS3ToGCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/aws/linux": {
            "post": {
                "description": "Migrate data stored in AWS S3 to a Linux-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from AWS S3 to Linux",
                "operationId": "MigrationS3ToLinuxPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/aws/ncp": {
            "post": {
                "description": "Migrate data stored in AWS S3 to Naver Cloud Object Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from AWS S3 to NCP",
                "operationId": "MigrationS3ToNCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/aws/windows": {
            "post": {
                "description": "Migrate data stored in AWS S3 to a Windows-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from AWS S3 to Windows",
                "operationId": "MigrationS3ToWindowsPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/dynamodb/firestore": {
            "post": {
                "description": "Migrate data stored in AWS DynamoDB to Google Cloud Firestore.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from DynamoDB to Firestore",
                "operationId": "MigrationDynamoDBToFirestorePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/dynamodb/mongodb": {
            "post": {
                "description": "Migrate data stored in AWS DynamoDB to Naver Cloud MongoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from DynamoDB to MongoDB",
                "operationId": "MigrationDynamoDBToMongoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/firestore/dynamodb": {
            "post": {
                "description": "Migrate data stored in Google Cloud Firestore to AWS DynamoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Firestore to DynamoDB",
                "operationId": "MigrationFirestoreToDynamoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/firestore/mongodb": {
            "post": {
                "description": "Migrate data stored in Google Cloud Firestore to Naver Cloud MongoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Firestore to MongoDB",
                "operationId": "MigrationFirestoreToMongoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/gcp/aws": {
            "post": {
                "description": "Migrate data stored in GCP Cloud Storage to AWS S3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from GCP to AWS S3",
                "operationId": "MigrationGCPToS3PostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/gcp/linux": {
            "post": {
                "description": "Migrate data stored in GCP Cloud Storage to a Linux-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from GCP to Linux",
                "operationId": "MigrationGCPToLinuxPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/gcp/ncp": {
            "post": {
                "description": "Migrate data stored in GCP Cloud Storage to NCP Object Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from GCP to NCP Object Storage",
                "operationId": "MigrationGCPToNCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/gcp/windows": {
            "post": {
                "description": "Migrate data stored in GCP Cloud Storage to a Windows-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from GCP to Windows",
                "operationId": "MigrationGCPToWindowsPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/linux/aws": {
            "post": {
                "description": "Migrate data stored in a Linux-based system to AWS S3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Linux to AWS S3",
                "operationId": "MigrationLinuxToS3PostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/linux/gcp": {
            "post": {
                "description": "Migrate data stored in a Linux-based system to GCP Cloud Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Linux to GCP Cloud Storage",
                "operationId": "MigrationLinuxToGCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/linux/ncp": {
            "post": {
                "description": "Migrate data stored in a Linux-based system to NCP Object Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Linux to NCP Object Storage",
                "operationId": "MigrationLinuxToNCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/mongodb/dynamodb": {
            "post": {
                "description": "Migrate data stored in Naver Cloud MongoDB to AWS DynamoDB.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from MongoDB to DynamoDB",
                "operationId": "MigrationMongoDBToDynamoDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/mongodb/firestore": {
            "post": {
                "description": "Migrate data stored in Naver Cloud MongoDB to Google Cloud Firestore.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from MongoDB to Firestore",
                "operationId": "MigrationMongoDBToFirestorePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/mysql": {
            "post": {
                "description": "Migrate data from one MySQL database to another MySQL database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from MySQL to MySQL",
                "operationId": "MigrationMySQLPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/ncp/aws": {
            "post": {
                "description": "Migrate data stored in NCP Object Storage to AWS S3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NCP to AWS S3",
                "operationId": "MigrationNCPToS3PostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/ncp/gcp": {
            "post": {
                "description": "Migrate data stored in NCP Object Storage to GCP Cloud Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NCP to GCP Cloud Storage",
                "operationId": "MigrationNCPToGCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    },
                    {
                        "type": "file",
                        "description": "Parameters required to generate test data",
                        "name": "gcpCredential",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/ncp/linux": {
            "post": {
                "description": "Migrate data stored in NCP Object Storage to a Linux-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NCP to Linux",
                "operationId": "MigrationNCPToLinuxPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/ncp/windows": {
            "post": {
                "description": "Migrate data stored in NCP Object Storage to a Windows-based system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NCP to Windows",
                "operationId": "MigrationNCPToWindowsPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/nrdbms": {
            "post": {
                "description": "Migrate data from NRDBMS to NRDBMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from NRDBMS to NRDBMS",
                "operationId": "MigrationNRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/objectstorage": {
            "post": {
                "description": "Migrate data from ObjectStorage to ObjectStorage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from ObjectStorage to ObjectStorage",
                "operationId": "MigrationObjectstoragePostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/rdbms": {
            "post": {
                "description": "Migrate data from RDBMS to RDBMS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from RDBMS to RDBMS",
                "operationId": "MigrationRDBMSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/windows/aws": {
            "post": {
                "description": "Migrate data stored in a Windows-based system to AWS S3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Windows to AWS S3",
                "operationId": "MigrationWindowsToS3PostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/windows/gcp": {
            "post": {
                "description": "Migrate data stored in a Windows-based system to GCP Cloud Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Windows to GCP Cloud Storage",
                "operationId": "MigrationWindowsToGCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/migration/windows/ncp": {
            "post": {
                "description": "Migrate data stored in a Windows-based system to NCP Object Storage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migrate]"
                ],
                "summary": "Migrate data from Windows to NCP Object Storage",
                "operationId": "MigrationWindowsToNCPPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for migration",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MigrateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllRestoreHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/nrdbms": {
            "post": {
                "description": "Restore NoSQL from SQL files to a NoSQL database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore NoSQL from data to NoSQL",
                "operationId": "RestoreNRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/objectstorage": {
            "post": {
                "description": "Restore objectstorage from files to a objectstorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore data from objectstorage",
                "operationId": "RestoreOSPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/rdbms": {
            "post": {
                "description": "Restore MySQL from MySQL files to a MySQL database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Restore data from MySQL",
                "operationId": "RestoreRDBPostHandler",
                "parameters": [
                    {
                        "description": "Parameters required for Restore",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RestoreTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Restore data",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/restore/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetRestoreHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateRestoreHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Restore]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteRestorekHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/schedule": {
            "get": {
                "description": "Retrieve a list of all Schedules in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Get all Schedules",
                "operationId": "GetAllSchedulesHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Schedules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Schedule"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Schedule and store it in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Create a new Schedule",
                "operationId": "CreateScheduleHandler",
                "parameters": [
                    {
                        "description": "Parameters required for creating a Schedule",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created a Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/schedule/{id}": {
            "get": {
                "description": "Get the details of a Schedule using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Get a Schedule by ID",
                "operationId": "GetScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Schedule using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Update an existing Schedule",
                "operationId": "UpdateScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Schedule",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Schedule using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Schedule]"
                ],
                "summary": "Delete a Schedule",
                "operationId": "DeleteScheduleHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Schedule",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/service/clearAll": {
            "delete": {
                "description": "Delete an All Service and Task.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[service]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteServiceAndTaskAllHandler",
                "responses": {
                    "200": {
                        "description": "Successfully deleted the All Service",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Clear All Task , Failed",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "description": "Retrieve a list of all Tasks in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Get all Tasks",
                "operationId": "GetAllTasksHandler",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Task and store it in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Create a new Task",
                "operationId": "CreateTaskHandler",
                "parameters": [
                    {
                        "description": "Parameters required for creating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created a Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "description": "Get the details of a Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Get a Task by ID",
                "operationId": "GetTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing Task using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Update an existing Task",
                "operationId": "UpdateTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters required for updating a Task",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Task using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Task]"
                ],
                "summary": "Delete a Task",
                "operationId": "DeleteTaskHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the Task",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/models.BasicResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BackupTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.BasicDataTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.BasicResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Result": {
                    "type": "string"
                }
            }
        },
        "models.GenFileParams": {
            "type": "object",
            "properties": {
                "checkCSV": {
                    "type": "boolean"
                },
                "checkGIF": {
                    "type": "boolean"
                },
                "checkJSON": {
                    "type": "boolean"
                },
                "checkPNG": {
                    "type": "boolean"
                },
                "checkSQL": {
                    "type": "boolean"
                },
                "checkServerJSON": {
                    "type": "boolean"
                },
                "checkServerSQL": {
                    "type": "boolean"
                },
                "checkTXT": {
                    "type": "boolean"
                },
                "checkXML": {
                    "type": "boolean"
                },
                "checkZIP": {
                    "type": "boolean"
                },
                "sizeCSV": {
                    "type": "string"
                },
                "sizeGIF": {
                    "type": "string"
                },
                "sizeJSON": {
                    "type": "string"
                },
                "sizePNG": {
                    "type": "string"
                },
                "sizeSQL": {
                    "type": "string"
                },
                "sizeServerJSON": {
                    "type": "string"
                },
                "sizeServerSQL": {
                    "type": "string"
                },
                "sizeTXT": {
                    "type": "string"
                },
                "sizeXML": {
                    "type": "string"
                },
                "sizeZIP": {
                    "type": "string"
                }
            }
        },
        "models.GenarateTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.MigrateTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.ProviderConfig": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "databaseId": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.RestoreTask": {
            "type": "object",
            "properties": {
                "dummy": {
                    "$ref": "#/definitions/models.GenFileParams"
                },
                "operationId": {
                    "type": "string"
                },
                "sourcePoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                },
                "targetPoint": {
                    "$ref": "#/definitions/models.ProviderConfig"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "properties": {
                "ScheduleID": {
                    "type": "string"
                },
                "ScheduleName": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "operationId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.Status"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BasicDataTask"
                    }
                },
                "tz": {
                    "type": "string"
                }
            }
        },
        "models.Status": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "StatusActive",
                "StatusInactive",
                "StatusPending",
                "StatusCompleted",
                "StatusFailed"
            ]
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "operationId": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MC-Data-Manager REST API",
	Description:      "MC-Data-Manager REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
