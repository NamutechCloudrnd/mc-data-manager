basePath: /
definitions:
  controllers.GenarateTask:
    properties:
      inline:
        $ref: '#/definitions/models.Task'
      targetPoint:
        $ref: '#/definitions/models.GenTaskTarget'
    type: object
  controllers.MigrateTask:
    properties:
      operationId:
        type: string
      sourcePoint:
        $ref: '#/definitions/models.ProviderConfig'
      targetPoint:
        $ref: '#/definitions/models.ProviderConfig'
    type: object
  models.BackupTask:
    properties:
      operationId:
        type: string
      sourcePoint:
        $ref: '#/definitions/models.ProviderConfig'
      targetPoint:
        $ref: '#/definitions/models.ProviderConfig'
    type: object
  models.BasicDataTask:
    properties:
      sourcePoint:
        $ref: '#/definitions/models.ProviderConfig'
      targetPoint:
        $ref: '#/definitions/models.ProviderConfig'
    type: object
  models.BasicResponse:
    properties:
      Error:
        type: string
      Result:
        type: string
    type: object
  models.GenTaskTarget:
    properties:
      bucket:
        type: string
      checkCSV:
        type: boolean
      checkGIF:
        type: boolean
      checkJSON:
        type: boolean
      checkPNG:
        type: boolean
      checkSQL:
        type: boolean
      checkServerJSON:
        type: boolean
      checkServerSQL:
        type: boolean
      checkTXT:
        type: boolean
      checkXML:
        type: boolean
      checkZIP:
        type: boolean
      databaseId:
        type: string
      databaseName:
        type: string
      endpoint:
        type: string
      host:
        type: string
      password:
        type: string
      path:
        type: string
      port:
        type: string
      profileName:
        type: string
      projectId:
        type: string
      provider:
        type: string
      region:
        type: string
      sizeCSV:
        type: string
      sizeGIF:
        type: string
      sizeJSON:
        type: string
      sizePNG:
        type: string
      sizeSQL:
        type: string
      sizeServerJSON:
        type: string
      sizeServerSQL:
        type: string
      sizeTXT:
        type: string
      sizeXML:
        type: string
      sizeZIP:
        type: string
      username:
        type: string
    type: object
  models.ProviderConfig:
    properties:
      bucket:
        type: string
      databaseId:
        type: string
      databaseName:
        type: string
      endpoint:
        type: string
      host:
        type: string
      password:
        type: string
      path:
        type: string
      port:
        type: string
      profileName:
        type: string
      projectId:
        type: string
      provider:
        type: string
      region:
        type: string
      username:
        type: string
    type: object
  models.RestoreTask:
    properties:
      operationId:
        type: string
      sourcePoint:
        $ref: '#/definitions/models.ProviderConfig'
      targetPoint:
        $ref: '#/definitions/models.ProviderConfig'
    type: object
  models.Schedule:
    properties:
      ScheduleID:
        type: string
      ScheduleName:
        type: string
      cron:
        type: string
      operationId:
        type: string
      startTime:
        type: string
      status:
        $ref: '#/definitions/models.Status'
      tag:
        items:
          type: string
        type: array
      tasks:
        items:
          $ref: '#/definitions/models.BasicDataTask'
        type: array
      tz:
        type: string
    type: object
  models.Status:
    enum:
    - active
    - inactive
    - pending
    - completed
    - failed
    type: string
    x-enum-varnames:
    - StatusActive
    - StatusInactive
    - StatusPending
    - StatusCompleted
    - StatusFailed
  models.Task:
    properties:
      operationId:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
info:
  contact:
    email: contact-to-cloud-barista@googlegroups.com
    name: API Support
    url: http://cloud-barista.github.io
  description: MC-Data-Manager REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: MC-Data-Manager REST API
  version: latest
paths:
  /backup/nrdb:
    post:
      consumes:
      - application/json
      description: Export data from a MySQL database to SQL files.
      operationId: BackupNRDBPostHandler
      parameters:
      - description: Parameters required for backup
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.BackupTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully backup data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Export data from MySQL
      tags:
      - '[Data Backup]'
      - '[Service RDBMS]'
  /backup/objectstorage:
    post:
      consumes:
      - application/json
      description: Export data from a objectstorage  to files.
      operationId: BackupOSPostHandler
      parameters:
      - description: Parameters required for backup
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.BackupTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully backup data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Export data from objectstorage
      tags:
      - '[Data Backup]'
      - '[Service Object Storage]'
  /backup/rdb:
    post:
      consumes:
      - application/json
      description: Export data from a MySQL database to SQL files.
      operationId: BackupRDBPostHandler
      parameters:
      - description: Parameters required for backup
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.BackupTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully backup data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Export data from MySQL
      tags:
      - '[Data Backup]'
      - '[Service RDBMS]'
  /generate/aws:
    post:
      consumes:
      - application/json
      description: Generate test data on AWS S3.
      operationId: GenerateS3PostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on AWS S3
      tags:
      - '[Data Generation]'
      - '[Service Object Storage]'
  /generate/dynamodb:
    post:
      consumes:
      - application/json
      description: Generate test data on AWS DynamoDB.
      operationId: GenerateDynamoDBPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on AWS DynamoDB
      tags:
      - '[Data Generation]'
      - '[Service NRDBMS]'
  /generate/firestore:
    post:
      consumes:
      - application/json
      description: Generate test data on GCP Firestore.
      operationId: GenerateFirestorePostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on GCP Firestore
      tags:
      - '[Data Generation]'
      - '[Service NRDBMS]'
  /generate/gcp:
    post:
      consumes:
      - application/json
      description: Generate test data on GCP Cloud Storage.
      operationId: GenerateGCPPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on GCP Cloud Storage
      tags:
      - '[Data Generation]'
      - '[Service Object Storage]'
  /generate/linux:
    post:
      consumes:
      - application/json
      description: Generate test data on on-premise Linux.
      operationId: GenerateLinuxPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on on-premise Linux
      tags:
      - '[Data Generation]'
  /generate/mongodb:
    post:
      consumes:
      - application/json
      description: Generate test data on NCP MongoDB.
      operationId: GenerateMongoDBPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on NCP MongoDB
      tags:
      - '[Data Generation]'
      - '[Service NRDBMS]'
  /generate/mysql:
    post:
      consumes:
      - application/json
      description: Generate test data on MySQL.
      operationId: GenerateMySQLPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on MySQL
      tags:
      - '[Data Generation]'
      - '[Service RDBMS]'
  /generate/ncp:
    post:
      consumes:
      - application/json
      description: Generate test data on NCP Object Storage.
      operationId: GenerateNCPPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on NCP Object Storage
      tags:
      - '[Data Generation]'
      - '[Service Object Storage]'
  /generate/windows:
    post:
      consumes:
      - application/json
      description: Generate test data on on-premise Windows.
      operationId: GenerateWindowsPostHandler
      parameters:
      - description: Parameters required to generate test data
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.GenarateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated test data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Generate test data on on-premise Windows
      tags:
      - '[Data Generation]'
  /migration/aws/gcp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to Google Cloud Storage.
      operationId: MigrationS3ToGCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to GCP
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/aws/linux:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to a Linux-based system.
      operationId: MigrationS3ToLinuxPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to Linux
      tags:
      - '[Data Migration]'
  /migration/aws/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to Naver Cloud Object Storage.
      operationId: MigrationS3ToNCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to NCP
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/aws/windows:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS S3 to a Windows-based system.
      operationId: MigrationS3ToWindowsPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from AWS S3 to Windows
      tags:
      - '[Data Migration]'
  /migration/dynamodb/firestore:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS DynamoDB to Google Cloud Firestore.
      operationId: MigrationDynamoDBToFirestorePostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from DynamoDB to Firestore
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/dynamodb/mongodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in AWS DynamoDB to Naver Cloud MongoDB.
      operationId: MigrationDynamoDBToMongoDBPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from DynamoDB to MongoDB
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/firestore/dynamodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in Google Cloud Firestore to AWS DynamoDB.
      operationId: MigrationFirestoreToDynamoDBPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Firestore to DynamoDB
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/firestore/mongodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in Google Cloud Firestore to Naver Cloud MongoDB.
      operationId: MigrationFirestoreToMongoDBPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Firestore to MongoDB
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/gcp/aws:
    post:
      consumes:
      - application/json
      description: Migrate data stored in GCP Cloud Storage to AWS S3.
      operationId: MigrationGCPToS3PostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to AWS S3
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/gcp/linux:
    post:
      consumes:
      - application/json
      description: Migrate data stored in GCP Cloud Storage to a Linux-based system.
      operationId: MigrationGCPToLinuxPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to Linux
      tags:
      - '[Data Migration]'
  /migration/gcp/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in GCP Cloud Storage to NCP Object Storage.
      operationId: MigrationGCPToNCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to NCP Object Storage
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/gcp/windows:
    post:
      consumes:
      - application/json
      description: Migrate data stored in GCP Cloud Storage to a Windows-based system.
      operationId: MigrationGCPToWindowsPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from GCP to Windows
      tags:
      - '[Data Migration]'
  /migration/linux/aws:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Linux-based system to AWS S3.
      operationId: MigrationLinuxToS3PostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to AWS S3
      tags:
      - '[Data Migration]'
  /migration/linux/gcp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Linux-based system to GCP Cloud Storage.
      operationId: MigrationLinuxToGCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to GCP Cloud Storage
      tags:
      - '[Data Migration]'
  /migration/linux/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Linux-based system to NCP Object Storage.
      operationId: MigrationLinuxToNCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Linux to NCP Object Storage
      tags:
      - '[Data Migration]'
  /migration/mongodb/dynamodb:
    post:
      consumes:
      - application/json
      description: Migrate data stored in Naver Cloud MongoDB to AWS DynamoDB.
      operationId: MigrationMongoDBToDynamoDBPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MongoDB to DynamoDB
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/mongodb/firestore:
    post:
      consumes:
      - application/json
      description: Migrate data stored in Naver Cloud MongoDB to Google Cloud Firestore.
      operationId: MigrationMongoDBToFirestorePostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MongoDB to Firestore
      tags:
      - '[Data Migration]'
      - '[Service NRDBMS]'
  /migration/mysql:
    post:
      consumes:
      - application/json
      description: Migrate data from one MySQL database to another MySQL database.
      operationId: MigrationMySQLPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from MySQL to MySQL
      tags:
      - '[Data Migration]'
      - '[Service RDBMS]'
  /migration/ncp/aws:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to AWS S3.
      operationId: MigrationNCPToS3PostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to AWS S3
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/ncp/gcp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to GCP Cloud Storage.
      operationId: MigrationNCPToGCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      - description: Parameters required to generate test data
        in: formData
        name: gcpCredential
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to GCP Cloud Storage
      tags:
      - '[Data Migration]'
      - '[Service Object Storage]'
  /migration/ncp/linux:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to a Linux-based system.
      operationId: MigrationNCPToLinuxPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to Linux
      tags:
      - '[Data Migration]'
  /migration/ncp/windows:
    post:
      consumes:
      - application/json
      description: Migrate data stored in NCP Object Storage to a Windows-based system.
      operationId: MigrationNCPToWindowsPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from NCP to Windows
      tags:
      - '[Data Migration]'
  /migration/windows/aws:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Windows-based system to AWS S3.
      operationId: MigrationWindowsToS3PostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to AWS S3
      tags:
      - '[Data Migration]'
  /migration/windows/gcp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Windows-based system to GCP Cloud Storage.
      operationId: MigrationWindowsToGCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to GCP Cloud Storage
      tags:
      - '[Data Migration]'
  /migration/windows/ncp:
    post:
      consumes:
      - application/json
      description: Migrate data stored in a Windows-based system to NCP Object Storage.
      operationId: MigrationWindowsToNCPPostHandler
      parameters:
      - description: Parameters required for migration
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.MigrateTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Migrate data from Windows to NCP Object Storage
      tags:
      - '[Data Migration]'
  /restore/nrdb:
    post:
      consumes:
      - application/json
      description: Import data from a MySQL database to SQL files.
      operationId: RestoreNRDBPostHandler
      parameters:
      - description: Parameters required for Restore
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.RestoreTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Restore data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Import data from MySQL
      tags:
      - '[Data Restore]'
      - '[Service RDBMS]'
  /restore/objectstorage:
    post:
      consumes:
      - application/json
      description: Import data from a objectstorage  to files.
      operationId: RestoreOSPostHandler
      parameters:
      - description: Parameters required for Restore
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.RestoreTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Restore data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Import data from objectstorage
      tags:
      - '[Data Restore]'
      - '[Service Object Storage]'
  /restore/rdb:
    post:
      consumes:
      - application/json
      description: Import data from a MySQL database to SQL files.
      operationId: RestoreRDBPostHandler
      parameters:
      - description: Parameters required for Restore
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.RestoreTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Restore data
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Import data from MySQL
      tags:
      - '[Data Restore]'
      - '[Service RDBMS]'
  /task:
    get:
      description: Retrieve a list of all Tasks in the system.
      operationId: GetAllTasksHandler
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all Tasks
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Get all Tasks
      tags:
      - '[Task]'
    post:
      consumes:
      - application/json
      description: Create a new Task and store it in the system.
      operationId: CreateTaskHandler
      parameters:
      - description: Parameters required for creating a Task
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.Schedule'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created a Task
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Create a new Task
      tags:
      - '[Task]'
  /task/{id}:
    delete:
      description: Delete an existing Task using its ID.
      operationId: DeleteTaskHandler
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted the Task
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Delete a Task
      tags:
      - '[Task]'
    get:
      consumes:
      - application/json
      description: Get the details of a Task using its ID.
      operationId: GetTaskHandler
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved a Task
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Get a Task by ID
      tags:
      - '[Task]'
    put:
      consumes:
      - application/json
      description: Update the details of an existing Task using its ID.
      operationId: UpdateTaskHandler
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Parameters required for updating a Task
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/models.Schedule'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the Task
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/models.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BasicResponse'
      summary: Update an existing Task
      tags:
      - '[Task]'
swagger: "2.0"
